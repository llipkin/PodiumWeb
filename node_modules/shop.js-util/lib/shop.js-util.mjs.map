{"version":3,"file":"shop.js-util.mjs","sources":["../src/card.coffee","../src/country.coffee","../src/data/currencies.coffee","../src/currency.coffee","../src/language.coffee","../src/dates.coffee","../src/uri.coffee","../src/qrcodes.coffee"],"sourcesContent":["defaultFormat = /(\\d{1,4})/g\n\ncards = [\n  type:      'amex'\n  pattern:   /^3[47]/\n  format:    /(\\d{1,4})(\\d{1,6})?(\\d{1,5})?/\n  length:    [15]\n  cvcLength: [4]\n  luhn:      true\n,\n  type:      'dankort'\n  pattern:   /^5019/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'dinersclub'\n  pattern:   /^(36|38|30[0-5])/\n  format:    /(\\d{1,4})(\\d{1,6})?(\\d{1,4})?/\n  length:    [14]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'discover'\n  pattern:   /^(6011|65|64[4-9]|622)/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'jcb'\n  pattern:   /^35/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'laser'\n  pattern:   /^(6706|6771|6709)/\n  format:    defaultFormat\n  length:    [16..19]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'maestro'\n  pattern:   /^(5018|5020|5038|6304|6703|6708|6759|676[1-3])/\n  format:    defaultFormat\n  length:    [12..19]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'mastercard'\n  pattern:   /^(5[1-5]|677189)|^(222[1-9]|2[3-6]\\d{2}|27[0-1]\\d|2720)/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'unionpay'\n  pattern:   /^62/\n  format:    defaultFormat\n  length:    [16..19]\n  cvcLength: [3]\n  luhn:      false\n,\n  type:      'visaelectron'\n  pattern:   /^4(026|17500|405|508|844|91[37])/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'elo'\n  pattern:   /^(4011|438935|45(1416|76|7393)|50(4175|6699|67|90[4-7])|63(6297|6368))/\n  format:    defaultFormat\n  length:    [16]\n  cvcLength: [3]\n  luhn:      true\n,\n  type:      'visa'\n  pattern:   /^4/\n  format:    defaultFormat\n  length:    [13, 16, 19]\n  cvcLength: [3]\n  luhn:      true\n]\n\nexport luhnCheck = (num) ->\n  odd = true\n  sum = 0\n\n  digits = (num + '').split('').reverse()\n\n  for digit in digits\n    digit = parseInt(digit, 10)\n    digit *= 2 if (odd = !odd)\n    digit -= 9 if digit > 9\n    sum += digit\n\n  sum % 10 == 0\n\nexport cardFromNumber = (num) ->\n  num = (num + '').replace(/\\D/g, '')\n  return card for card in cards when card.pattern.test(num)\n\nexport cardType = (num) ->\n  return null unless num\n  cardFromNumber(num)?.type or null\n\nexport restrictNumeric = (e) ->\n  # Key event is for a browser shortcut\n  return true if e.metaKey or e.ctrlKey\n\n  key = e.keyCode\n\n  # If keycode is a space\n  return e.preventDefault() if key is 32\n\n  # If keycode is a special char (WebKit)\n  return true if key is 0\n\n  # If char is a special char (Firefox)\n  return true if key < 33\n\n  input = String.fromCharCode key\n\n  # Char is a number or a space\n  if !/[\\d\\s]/.test input\n    return e.preventDefault()\n  return true\n","export requiresPostalCode = (code) ->\n  code = code.toLowerCase()\n  return code == 'dz' || code == 'ar' || code == 'am' || code == 'au' || code == 'at' || code == 'az' || code == 'a2' || code == 'bd' || code == 'by' || code == 'be' || code == 'ba' || code == 'br' || code == 'bn' || code == 'bg' || code == 'ca' || code == 'ic' || code == 'cn' || code == 'hr' || code == 'cy' || code == 'cz' || code == 'dk' || code == 'en' || code == 'ee' || code == 'fo' || code == 'fi' || code == 'fr' || code == 'ge' || code == 'de' || code == 'gr' || code == 'gl' || code == 'gu' || code == 'gg' || code == 'ho' || code == 'hu' || code == 'in' || code == 'id' || code == 'il' || code == 'it' || code == 'jp' || code == 'je' || code == 'kz' || code == 'kr' || code == 'ko' || code == 'kg' || code == 'lv' || code == 'li' || code == 'lt' || code == 'lu' || code == 'mk' || code == 'mg' || code == 'm3' || code == 'my' || code == 'mh' || code == 'mq' || code == 'yt' || code == 'mx' || code == 'mn' || code == 'me' || code == 'nl' || code == 'nz' || code == 'nb' || code == 'no' || code == 'pk' || code == 'ph' || code == 'pl' || code == 'po' || code == 'pt' || code == 'pr' || code == 're' || code == 'ru' || code == 'sa' || code == 'sf' || code == 'cs' || code == 'sg' || code == 'sk' || code == 'si' || code == 'za' || code == 'es' || code == 'lk' || code == 'nt' || code == 'sx' || code == 'uv' || code == 'vl' || code == 'se' || code == 'ch' || code == 'tw' || code == 'tj' || code == 'th' || code == 'tu' || code == 'tn' || code == 'tr' || code == 'tm' || code == 'vi' || code == 'ua' || code == 'gb' || code == 'us' || code == 'uy' || code == 'uz' || code == 'va' || code == 'vn' || code == 'wl' || code == 'ya'\n\nexport requiresState = (code, countries) ->\n  code = code.toUpperCase()\n  for country in countries\n    if country.code.toUpperCase() == code\n      return country.subdivisions.length > 0\n  return false\n\n","export default {\n  data:\n    'aud':'$'\n    'cad':'$'\n    'eur':'€'\n    'gbp':'£'\n    'hkd':'$'\n    'jpy':'¥'\n    'nzd':'$'\n    'sgd':'$'\n    'usd':'$'\n    'ghc':'¢'\n    'ars':'$'\n    'bsd':'$'\n    'bbd':'$'\n    'bmd':'$'\n    'bnd':'$'\n    'kyd':'$'\n    'clp':'$'\n    'cop':'$'\n    'xcd':'$'\n    'svc':'$'\n    'fjd':'$'\n    'gyd':'$'\n    'lrd':'$'\n    'mxn':'$'\n    'nad':'$'\n    'sbd':'$'\n    'srd':'$'\n    'tvd':'$'\n    'bob':'$b'\n    'uyu':'$u'\n    'egp':'£'\n    'fkp':'£'\n    'gip':'£'\n    'ggp':'£'\n    'imp':'£'\n    'jep':'£'\n    'lbp':'£'\n    'shp':'£'\n    'syp':'£'\n    'cny':'¥'\n    'afn':'؋'\n    'thb':'฿'\n    'khr':'៛'\n    'crc':'₡'\n    'trl':'₤'\n    'ngn':'₦'\n    'kpw':'₩'\n    'krw':'₩'\n    'ils':'₪'\n    'vnd':'₫'\n    'lak':'₭'\n    'mnt':'₮'\n    'cup':'₱'\n    'php':'₱'\n    'uah':'₴'\n    'mur':'₨'\n    'npr':'₨'\n    'pkr':'₨'\n    'scr':'₨'\n    'lkr':'₨'\n    'irr':'﷼'\n    'omr':'﷼'\n    'qar':'﷼'\n    'sar':'﷼'\n    'yer':'﷼'\n    'pab':'b/.'\n    'vef':'bs'\n    'bzd':'bz$'\n    'nio':'c$'\n    'chf':'chf'\n    'huf':'ft'\n    'awg':'ƒ'\n    'ang':'ƒ'\n    'pyg':'gs'\n    'jmd':'j$'\n    'czk':'kč'\n    'bam':'km'\n    'hrk':'kn'\n    'dkk':'kr'\n    'eek':'kr'\n    'isk':'kr'\n    'nok':'kr'\n    'sek':'kr'\n    'hnl':'l'\n    'ron':'lei'\n    'all':'lek'\n    'lvl':'ls'\n    'ltl':'lt'\n    'mzn':'mt'\n    'twd':'nt$'\n    'bwp':'p'\n    'byr':'p.'\n    'gtq':'q'\n    'zar':'r'\n    'brl':'r$'\n    'dop':'rd$'\n    'myr':'rm'\n    'idr':'rp'\n    'sos':'s'\n    'pen':'s/.'\n    'ttd':'tt$'\n    'zwd':'z$'\n    'pln':'zł'\n    'mkd':'ден'\n    'rsd':'Дин.'\n    'bgn':'лв'\n    'kzt':'лв'\n    'kgs':'лв'\n    'uzs':'лв'\n    'azn':'ман'\n    'rub':'руб'\n    'inr':''\n    'try':''\n    '':''\n    'pnt': ''\n    'btc': ''\n    'eth': ''\n}\n","import currencies from './data/currencies'\n\ncurrencySeparator = '.'\ndigitsOnlyRe = new RegExp('[^\\\\d.-]', 'g')\n\ncurrencySigns = currencies.data\n\n# Does the currency support decimal notation\nexport isZeroDecimal = (code)->\n  code = code.toLowerCase() if code\n\n  if code == 'bif' || code == 'clp' || code == 'djf' || code == 'gnf' || code == 'jpy' || code == 'kmf' || code == 'krw' || code == 'mga' || code == 'pyg' || code == 'rwf' || code == 'vnd' || code == 'vuv' || code == 'xaf' || code == 'xof' || code == 'xpf'\n    return true\n  return false\n\n# Is the currency code a crypto currency?\nexport isCrypto = (code)->\n  return code == 'eth' || code == 'btc' || code =='xbt'\n\n# Convert humanized currency format to data format back to currency format\nexport renderUpdatedUICurrency = (code, uiCurrency) ->\n  code = code.toLowerCase() if code\n\n  return renderUICurrencyFromJSON code, renderJSONCurrencyFromUI(code, uiCurrency)\n\n# Convert data format to humanized format\nexport renderUICurrencyFromJSON = (code, jsonCurrency) ->\n  code = code.toLowerCase() if code\n\n  if isNaN jsonCurrency\n    jsonCurrency = 0\n\n  currentCurrencySign = currencySigns[code] ? ''\n\n  # ethereum\n  if code == 'eth' || code == 'btc' || code =='xbt'\n    jsonCurrency = jsonCurrency / 1e9\n    return currentCurrencySign + jsonCurrency\n\n  jsonCurrency = '' + jsonCurrency\n  # jsonCurrency is not cents\n  if isZeroDecimal code\n    return currentCurrencySign + jsonCurrency\n\n  # jsonCurrency is cents\n  while jsonCurrency.length < 3\n    jsonCurrency = '0' + jsonCurrency\n\n  return currentCurrencySign + jsonCurrency.substr(0, jsonCurrency.length - 2) + '.' + jsonCurrency.substr(-2)\n\n# Convert humanized format to data format\nexport renderJSONCurrencyFromUI = (code, uiCurrency) ->\n  code = code.toLowerCase() if code\n\n  currentCurrencySign = currencySigns[code]\n\n  # ethereum\n  if code == 'eth' || code == 'btc' || code =='xbt'\n    return parseFloat(('' + uiCurrency).replace(digitsOnlyRe, '')) * 1e9\n\n  if isZeroDecimal code\n    return parseInt(('' + uiCurrency).replace(digitsOnlyRe, '').replace(currencySeparator, ''), 10)\n\n  # uiCurrency is a whole unit of currency\n  parts = uiCurrency.split currencySeparator\n  if parts.length > 1\n    parts[1] = parts[1].substr(0, 2)\n    while parts[1].length < 2\n      parts[1] += '0'\n  else\n    parts[1] = '00'\n\n  return parseInt(parseFloat(parts[0].replace(digitsOnlyRe, '')) * 100 + parseFloat(parts[1].replace(digitsOnlyRe, '')), 10)\n\n","export getLanguage = ()->\n  return window.navigator?.userLanguage ? window.navigator?.languages[0] ? window.navigator?.language\n","import moment from 'moment-timezone'\nimport { getLanguage } from './language'\n\nexport rfc3339  = 'YYYY-MM-DDTHH:mm:ssZ'\nexport mmddyyyy = 'M-DD-YYYY'\nexport yyyymmdd = 'YYYY-MM-DD'\nexport ddmmyyyy = 'D-MM-YYYY'\n\nexport renderDate = (date, format) ->\n  if !format?\n    if getLanguage() == 'en-US'\n      format = mmddyyyy\n    else\n      format = ddmmyyyy\n\n  return moment(date).format format\n\nexport renderUIDate = (date)->\n  return renderDate(date)\n\nexport renderJSONDate = (date)->\n  return renderDate(date, rfc3339)\n","import store        from 'akasha'\n\n# Dictionarify the query string for easy look up,\n# cache it too\nqueries = null\nexport getQueries = ->\n  if queries\n    return queries\n\n  search = /([^&=]+)=?([^&]*)/g\n  q = window.location.href.split('?')[1]\n  qs = {}\n  if q?\n    while (match = search.exec(q))\n      k = match[1]\n      try\n        k = decodeURIComponent k\n      v = match[2]\n      try\n        v = decodeURIComponent v\n      catch err\n      qs[k] = v\n\n  queries = qs\n\n# Fetch referrer if one is specifies in the query or\n# fetch it from the localstorage\nexport getReferrer = (hashReferrer = false) ->\n  ref = null\n\n  if getQueries().referrer?\n    ref = getQueries().referrer\n  else\n    ref = store.get 'referrer'\n\n  if hashReferrer\n    r = window.location.hash.replace('#','')\n    if r != ''\n      referrer = r\n    else\n      referrer = ref\n  else\n    referrer = ref\n\n# Fetch Mailchimp ids\nexport getMCIds = () ->\n  [getQueries().mc_eid, getQueries().mc_cid]\n\n\n\n","  export renderCryptoQR = (currency, address, amount)->\n    switch currency\n      when 'eth'\n        return 'ethereum:' + address + '?value=' + amount / 1e9\n      when 'btc'\n        return 'bitcoin:' + address + '?amount=' + amount / 1e9\n    return 'unknown'\n\n"],"names":[],"mappings":"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"}